rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return request.auth != null && request.auth.token.email == 'hirush@admin.com';
    }
    
    // Helper function to check if user has admin role (if you implement custom claims)
    function hasAdminRole() {
      return request.auth != null && 
        ('role' in request.auth.token) && 
        request.auth.token.role == 'admin';
    }
    
    match /employees/{employeeId} {
      // Allow admin to read/write all, employees can only access their own data
      allow read, write: if isAdmin() || 
        (request.auth != null && request.auth.uid == employeeId);
    }
    
    match /messages/{document} {
      allow read, write: if request.auth != null;
    }
    
    match /leaves/{document} {
      allow read, write: if request.auth != null;
    }
    
    match /leaveRequests/{document} {
      allow read, write: if request.auth != null;
    }
    
    match /attendance/{document} {
      allow read, write: if request.auth != null;
    }
    
    match /attendanceTracking/{document} {
      allow read, write: if request.auth != null;
    }
    
    // Add holidays collection rules - only admins can manage holidays
    match /holidays/{document} {
      allow read: if request.auth != null;  // All authenticated users can read holidays
      allow write: if isAdmin();           // Only admins can create/update/delete holidays
    }
  }
}